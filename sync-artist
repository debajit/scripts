#!/usr/bin/env bash

#
# sync-artist
#
# Syncs the artist directory from the local disk to the remote,
# deleting files from the remote if required.
#
# OPTIONS
#   sync-artist [ARTIST_NAME] [-n/--dry-run]
#
# EXAMPLES
#   sync-artist ARTIST_NAME            # Sync the given artist to the cloud
#   sync-artist ARTIST_NAME -n         # Dry-run a sync of the given artist to the cloud
#   sync-artist -n                     # Dry-run a sync of the entire local music collection
#   sync-artist                        # Display usage
#
# DEPENDENCIES:
# - bat for --dry-run option (for diff highlighting)
#

set -euo pipefail

source "notification.sh"

dry_run=0
artist=""

while [[ -n "${1:-}" ]]; do
  case "${1}" in
    -n|--dry-run)
      dry_run=1
      ;;
    -*)
      echo_error "Invalid option '${1}'"
      exit 1
      ;;
    *)
      artist="${1%/}"
      ;;
  esac

  shift
done


# We will handle the following cases:
#   sync-artist ARTIST_NAME            # Sync the given artist to the cloud
#   sync-artist ARTIST_NAME -n         # Dry-run a sync of the given artist to the cloud
#   sync-artist -n                     # Dry-run a sync of the entire local music collection
#   sync-artist                        # Display usage

if [[ -z "${artist}" ]]; then   # Artist is blank
  if [[ $dry_run == 1 ]]; then
    # sync-artist -n
    echo_notify "Dry-syncing all local music..."
    rclone -L check "${HOME}/MusicOnExternalDrive/" "box:Debajit/Music/" --combined - 2> /dev/null | grep -v '^=' | bat -p --language=diff
  else
    # sync-artist
    # Display usage
    echo_notify "Usage: sync-artist [ARTIST_NAME] [-n/--dry-run]"
  fi
elif [[ -d "${artist}" ]]; then  # Artist found
  if [[ $dry_run == 1 ]]; then
    # sync-artist EXISTING_ARTIST -n
    # Dry-sync the existing artist
    echo_notify "Dry-syncing artist '${artist}'..."
    rclone -L check "${artist}" "box:Debajit/Music/${artist}" --combined - 2> /dev/null | grep -v '^=' | bat -p --language=diff
  else
    # sync-artist EXISTING_ARTIST
    # Sync the artist to the cloud store

    echo_notify "Syncing artist '${artist}' to box..."
    rclone -PL sync --exclude '.*{/**,}' "${artist}/" "box:Debajit/Music/${artist}/"

    echo_notify "Syncing artist '${artist}' to tardigrade..."
    rclone -PL sync --exclude '.*{/**,}' "${artist}/" "tardigrade:debajit/Music/${artist}/"

    # echo_notify "Syncing artist '${artist}' to tardigrade..."
    # rclone -P sync --exclude '.*{/**,}' "${artist}/" "tulip:Debajit/Music/${artist}/"
  fi
else
  die "Artist directory '${artist}' does not exist"
fi
